name: publish

on:
  push:
    tags:
      - "*.*.*"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false


jobs:
  build_and_publish_pypi:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'statnett'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: install poetry
        run: |
          python -m pip install --upgrade pip wheel pipx
          python -m pipx install poetry
      - name: install dependencies
        run: |
          poetry install
          poetry self add "poetry-dynamic-versioning[plugin]"
      - name: run tests and linter
        run: |
          poetry run pytest
          poetry run flake8 .
          poetry run black --check .
          poetry run isort -c .
      - name: deploy
        run: |
          poetry config repositories.test-pypi https://test.pypi.org/legacy/
          poetry config pypi-token.test-pypi ${{ secrets.TEST_PYPI_TOKEN }}
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
          poetry build
          poetry publish -r test-pypi
          poetry publish

  build_docs:
    needs: build_and_publish_pypi
    runs-on: ubuntu-latest
    if: github.repository_owner == 'statnett'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: install poetry
        run: |
          python -m pip install --upgrade pip wheel pipx
          python -m pipx install poetry
      - name: install dependencies
        run: |
          poetry install --with docs
      - name: build docs
        run: |
          cd docs
          poetry run make html
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./_build/html

  # Deployment job
  deploy_docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build_docs
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
